generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Order {
    id        Int      @id @default(autoincrement())
    product   Product  @relation(fields: [productId], references: [id])
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    status    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    productId String
}

model Product {
    id          String   @id @default(cuid())
    name        String
    price       Float
    rating      Int
    images      String[]
    description String
    features    String[]
    Order       Order[]
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    gender        String?
    age           Int?
    accounts      Account[]
    sessions      Session[]
    createdAt     DateTime  @default(now())
    orders        Order[]
}

model VerificationToken {
    id         String   @id
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
